{"version":3,"sources":["images/header/logo.svg","contexts/RegisteredUserContext.js","contexts/CurrentUserContext.js","utils/authApi.js","utils/utils.js","utils/baseApi.js","components/ProtectedRoute.js","components/Header.js","components/Content.js","components/SignWithForm.js","components/PopupWithItem.js","components/InfoTooltip.js","components/AuthPage.js","components/Profile.js","components/Card.js","components/Gallery.js","components/Footer.js","components/PopupWithForm.js","components/PopupUserInfo.js","components/PopupCardInfo.js","components/PopupUserpic.js","components/PopupPicture.js","components/HomePage.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","RegisteredUserContext","React","createContext","CurrentUserContext","baseUrl","headers","this","_url","_headers","resourceName","email","password","fetch","method","body","JSON","stringify","token","Authorization","baseResponse","handleResponse","then","response","ok","json","Promise","reject","newUserInfo","_handleBaseResponse","_postUserInfo","userInfo","_getUserInfo","localStorage","getItem","name","about","link","cardId","methodName","userpicLink","avatar","status","statusText","_getCardList","_patchUserInfo","cardInfo","_postNewCard","_deleteCard","_toggleLikeCard","_patchUserpic","authorization","ProtectedRoute","loggedIn","Component","component","props","to","Header","pageType","onRedirectButton","userLogin","buttonText","home","login","register","className","src","logo","alt","type","onClick","Content","children","SignWithForm","onSubmit","registeredUser","useContext","useState","setEmail","setPassword","useEffect","legend","linkTo","linkText","inputGeneralProps","required","action","event","preventDefault","noValidate","htmlFor","id","placeholder","value","onChange","target","PopupWithItem","popupAdditionalClassName","popupItemSizeClassName","popupCloseButtonPositionClassName","onClose","onKeyDown","key","tabIndex","stopPropagation","InfoTooltip","isSuccessful","isOpen","tooltipImageTypeClassName","tooltipText","true","false","popupChildren","popupAdditionalClasses","join","AuthPage","tooltipTypeFailureProps","tooltipTypeSuccessProps","contentChildren","Profile","onImage","onEditButton","onAddButton","Card","item","onLikeButton","onRemoveButton","currentUserId","_id","likes","owner","isOwner","hasLike","some","user","likeButtonClasses","length","Gallery","items","itemProps","map","index","Footer","PopupWithForm","isValid","submitButtonClasses","submitButtonProps","slice","disabled","PopupUserInfo","onUpdate","currentUser","setName","setAbout","isValidName","setIsValidName","isValidAbout","setIsValidAbout","nameError","setNameError","aboutError","setAboutError","inputClasses","minLength","formChildren","maxLength","pattern","validity","validationMessage","valid","PopupCardInfo","onAdd","nameInputRef","useRef","aboutInputRef","current","ref","PopupUserpic","inputRef","PopupPicture","HomePage","headerProps","profileProps","galleryProps","popupUserInfoProps","popupCardInfoProps","popupUserpicProps","popupPictureProps","App","history","useHistory","setLoggedIn","setRegisteredUser","setUserLogin","isOpenTooltipFailure","setIsOpenTooltipFailure","isOpenTooltipSuccess","setIsOpenTooltipSuccess","setCurrentUser","cards","setCards","selectedCard","setSelectedCard","isOpenPopupUserpic","setIsOpenPopupUserpic","isOpenPopupUserInfo","setIsOpenPopupUserInfo","isOpenPopupCardInfo","setIsOpenPopupCardInfo","closeAllPopups","handleBaseApiError","apiName","statusInfo","console","error","handleAuthError","errorMessage","errorCode","authPageTypeLoginProps","push","authApi","authorizeUser","setItem","catch","400","401","authPageTypeRegisterProps","registerUser","homePageProps","removeItem","userId","httpMethod","baseApi","toggleLikeCard","updatedCard","mappedCards","card","removeCard","filter","setUserInfo","addCard","newCard","concat","setUserpic","checkToken","data","getUserInfo","getCardList","except","message","Provider","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8bb0f837.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.e889e45f.svg\";","import React from 'react';\n\nexport const RegisteredUserContext = React.createContext();\n","import React from 'react';\n\nexport const CurrentUserContext = React.createContext();\n","/** @module ../utils/authApi.js */\n\nimport { authApiData } from './utils';\n\n/** Class representing the auth api. */\nclass AuthApi {\n  constructor({ baseUrl, headers }) {\n    this._url = baseUrl;\n    this._headers = headers;\n  }\n\n  _postUserInfo(resourceName, { email, password }) {\n    return fetch(`${ this._url }/${ resourceName }`, {\n      method: 'POST',\n      headers: { ...this._headers },\n      body: JSON.stringify({ email, password })\n    });\n  }\n\n  _getUserInfo(token) {\n    return fetch(`${ this._url }/users/me`, {\n      headers: {\n        ...this._headers,\n        Authorization: `Bearer ${ token }`\n      }\n    });\n  }\n\n  _handleBaseResponse(baseResponse, handleResponse) {\n    return baseResponse\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        return Promise.reject(response);\n      })\n      .then(handleResponse)\n  }\n\n  registerUser(newUserInfo, handleResponse) {\n    return this._handleBaseResponse(\n      this._postUserInfo('signup', newUserInfo),\n      handleResponse,\n    );\n  }\n\n  authorizeUser(userInfo, handleResponse) {\n    return this._handleBaseResponse(\n      this._postUserInfo('signin', userInfo),\n      handleResponse,\n    );\n  }\n\n  checkToken(handleResponse) {\n    return this._handleBaseResponse(\n      this._getUserInfo(localStorage.getItem('jwt')),\n      handleResponse,\n    );\n  }\n}\n\nexport default new AuthApi(authApiData);\n","/** @module ../utils/utils.js */\n\nconst authApiData = {\n  baseUrl: 'https://auth.nomoreparties.co',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\n\nconst baseApiData = {\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-13',\n  headers: {\n    authorization: '2209a41b-072f-4997-82e0-004301b435a4',\n    'Content-Type': 'application/json'\n  }\n};\n\n\nexport { authApiData, baseApiData };\n","/** @module ../utils/baseApi.js */\n\nimport { baseApiData } from './utils.js';\n\n/** Class representing the base api. */\nclass BaseApi {\n  constructor({ baseUrl, headers }) {\n    this._url = baseUrl;\n    this._headers = headers;\n  }\n\n  _getUserInfo() {\n    return fetch(`${ this._url }/users/me`, { headers: this._headers });\n  }\n\n  _getCardList() {\n    return fetch(`${ this._url }/cards`, { headers: this._headers });\n  }\n\n  _patchUserInfo({ name, about }) {\n    return fetch(`${ this._url }/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({ name, about })\n    });\n  }\n\n  _postNewCard({ name, link }) {\n    return fetch(`${ this._url }/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({ name, link })\n    });\n  }\n\n  _deleteCard(cardId) {\n    return fetch(`${ this._url }/cards/${ cardId }`, {\n      method: 'DELETE',\n      headers: this._headers\n    });\n  }\n\n  _toggleLikeCard(cardId, methodName) {\n    return fetch(`${ this._url }/cards/likes/${ cardId }`, {\n      method: methodName,\n      headers: this._headers\n    });\n  }\n\n  _patchUserpic(userpicLink) {\n    return fetch(`${ this._url }/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: userpicLink\n      })\n    });\n  }\n\n  _handleBaseResponse(baseResponse, handleResponse) {\n    return baseResponse\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        return Promise.reject(`${ response.status } ${ response.statusText }`);\n      })\n      .then(handleResponse)\n  }\n\n  getUserInfo(handleResponse) {\n    return this._handleBaseResponse(this._getUserInfo(), handleResponse);\n  }\n\n  getCardList(handleResponse) {\n    return this._handleBaseResponse(this._getCardList(), handleResponse);\n  }\n\n  setUserInfo(userInfo, handleResponse) {\n    return this._handleBaseResponse(\n      this._patchUserInfo(userInfo),\n      handleResponse\n    );\n  }\n\n  addCard(cardInfo, handleResponse) {\n    return this._handleBaseResponse(\n      this._postNewCard(cardInfo),\n      handleResponse\n    );\n  }\n\n  removeCard(cardId, handleResponse) {\n    return this._handleBaseResponse(\n      this._deleteCard(cardId),\n      handleResponse\n    );\n  }\n\n  toggleLikeCard(cardId, methodName, handleResponse) {\n    return this._handleBaseResponse(\n      this._toggleLikeCard(cardId, methodName),\n      handleResponse\n    );\n  }\n\n  setUserpic(userpicLink, handleResponse) {\n    return this._handleBaseResponse(\n      this._patchUserpic(userpicLink),\n      handleResponse\n    );\n  }\n}\n\nexport default new BaseApi(baseApiData);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nfunction ProtectedRoute({ loggedIn, component: Component, ...props }) {\n  return (\n    <Route>\n      { loggedIn ? <Component { ...props } /> : <Redirect to=\"/sign-in\" /> }\n    </Route>\n  );\n}\n\nexport default ProtectedRoute;\n","import React from 'react';\nimport logo from '../images/header/logo.svg';\n\n/**\n * Component representing the header of a page.\n * @returns {JSX.Element}\n * @constructor\n */\nfunction Header({ pageType, onRedirectButton, userLogin = null }) {\n  const buttonText = {\n    home: 'Выйти',\n    login: 'Регистрация',\n    register: 'Войти'\n  }[pageType];\n\n  return (\n    <header className=\"page__section header\">\n      <img\n        src={logo}\n        alt=\"Логотип проекта\"\n        className=\"header__image\"\n      />\n      <button\n        type=\"button\"\n        className=\"header__button\"\n        onClick={onRedirectButton}\n      >\n        {buttonText}\n      </button>\n      {\n        userLogin && (<span className=\"header__login\">{userLogin}</span>)\n      }\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\n\nfunction Content({ children }) {\n  return (\n    <main className=\"page__section content\">{children}</main>\n  );\n}\n\nexport default Content;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { RegisteredUserContext } from '../contexts/RegisteredUserContext';\n\nfunction SignWithForm({ pageType, onSubmit }) {\n  const registeredUser = React.useContext(RegisteredUserContext);\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n\n  React.useEffect(() => {\n    setEmail(registeredUser.email);\n    setPassword(registeredUser.password);\n  }, [registeredUser]);\n\n  // Handlers:\n  const handleEmailInput = (event) => {\n    setEmail(event.target.value);\n  };\n  const handlePasswordInput = (event) => {\n    setPassword(event.target.value);\n  };\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    onSubmit({ email, password });\n  };\n\n  // Form data:\n  const { legend, buttonText, linkTo, linkText } = {\n    login: {\n      legend: 'Вход',\n      buttonText: 'Войти',\n      linkTo: '/sign-up',\n      linkText: 'Ещё не зарегистрированы? Регистрация',\n    },\n    register: {\n      legend: 'Регистрация',\n      buttonText: 'Зарегистрироваться',\n      linkTo: '/sign-in',\n      linkText: 'Уже зарегистрированы? Войти',\n    }\n  }[pageType];\n  const inputGeneralProps = {\n    className: 'form__input form__input_theme_dark',\n    required: true\n  };\n\n  return (\n    <section className=\"sign\">\n      <form\n        action=\"#\"\n        className=\"sign__item form form_theme_dark\"\n        name={pageType}\n        onSubmit={handleSubmit}\n        noValidate\n      >\n        <fieldset className=\"form__fieldset\">\n          <legend className=\"form__legend form__legend_align_center\">\n            {legend}\n          </legend>\n          <label htmlFor=\"inputUserEmail\" className=\"form__label\">\n            <input\n              type=\"email\"\n              id=\"inputUserEmail\"\n              name=\"userEmail\"\n              placeholder=\"Email\"\n              value={email}\n              onChange={handleEmailInput}\n              {...inputGeneralProps}\n            />\n          </label>\n          <label htmlFor=\"inputUserPassword\" className=\"form__label\">\n            <input\n              type=\"password\"\n              id=\"inputUserPassword\"\n              name=\"userPassword\"\n              placeholder=\"Пароль\"\n              value={password}\n              onChange={handlePasswordInput}\n              {...inputGeneralProps}\n            />\n          </label>\n        </fieldset>\n        <button type=\"submit\" className=\"form__button\">{buttonText}</button>\n      </form>\n      <Link to={linkTo} className=\"sign__item sign__item_type_link\">\n        {linkText}\n      </Link>\n    </section>\n  );\n}\n\nexport default SignWithForm;\n","import React from 'react';\n\n/**\n * Component representing a popup which contains an item.\n * @param props - Object which contains the properties.\n * @returns {JSX.Element}\n * @constructor\n */\nfunction PopupWithItem(props) {\n  const {\n    popupAdditionalClassName,\n    popupItemSizeClassName,\n    popupCloseButtonPositionClassName = 'popup__button_position_top-right',\n    onClose,\n    children\n  } = props;\n\n  return (\n    <div\n      className={`popup ${popupAdditionalClassName}`}\n      onClick={onClose}\n      onKeyDown={(event) => {\n        if (event.key === 'Escape') onClose();\n      }}\n      tabIndex=\"-1\"\n    >\n      <div\n        className={`popup__item ${popupItemSizeClassName}`}\n        onClick={(event) => {\n          event.stopPropagation();\n        }}\n      >\n        {children}\n        <button\n          type=\"button\"\n          className={`popup__button ${popupCloseButtonPositionClassName}`}\n          onClick={onClose}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default PopupWithItem;\n","import React from 'react';\nimport PopupWithItem from './PopupWithItem';\n\nfunction InfoTooltip({ pageType, isSuccessful, isOpen, onClose }) {\n  const tooltipImageTypeClassName = isSuccessful\n    ? 'tooltip__image_type_success'\n    : 'tooltip__image_type_failure';\n  const tooltipText = {\n    login: {\n      true: 'Вы успешно авторизовались!',\n      false: 'Что-то пошло не так! Попробуйте еще раз.'\n    },\n    register: {\n      true: 'Вы успешно зарегистрировались!',\n      false: 'Что-то пошло не так! Попробуйте еще раз.'\n    }\n  }[pageType][isSuccessful];\n\n  const popupChildren = (\n    <div className=\"tooltip\">\n      <div className={`tooltip__image ${tooltipImageTypeClassName}`} />\n      <p className=\"tooltip__text\">{tooltipText}</p>\n    </div>\n  );\n  const popupAdditionalClasses = [\n    'popup_background-transparency_semi',\n    'popup_opened'\n  ];\n\n  return (\n    <PopupWithItem\n      popupAdditionalClassName={\n        isOpen\n          ? popupAdditionalClasses.join(' ')\n          : popupAdditionalClasses[0]\n      }\n      popupItemSizeClassName=\"popup__item_size-for_tooltip\"\n      popupCloseButtonPositionClassName=\"popup__button_position_top-center\"\n      onClose={onClose}\n      children={popupChildren}\n    />\n  );\n}\n\nexport default InfoTooltip;\n","import React from 'react';\nimport Header from './Header';\nimport Content from './Content';\nimport SignWithForm from './SignWithForm';\nimport InfoTooltip from './InfoTooltip';\n\nfunction AuthPage(props) {\n  const {\n    pageType,\n    onRedirectButton,\n    onSubmit,\n    tooltipTypeFailureProps,\n    tooltipTypeSuccessProps\n  } = props;\n\n  const contentChildren = (\n    <SignWithForm\n      pageType={pageType}\n      onSubmit={onSubmit}\n    />\n  );\n\n  return (\n    <>\n      <Header\n        pageType={pageType}\n        onRedirectButton={onRedirectButton}\n      />\n      <Content children={contentChildren} />\n      <InfoTooltip\n        pageType={pageType}\n        isSuccessful={false}\n        {...tooltipTypeFailureProps}\n      />\n      <InfoTooltip\n        pageType={pageType}\n        isSuccessful={true}\n        {...tooltipTypeSuccessProps}\n      />\n    </>\n  );\n}\n\nexport default AuthPage;\n","import React from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Profile({ onImage, onEditButton, onAddButton }) {\n  const { avatar, name, about } = React.useContext(CurrentUserContext);\n\n  return (\n    <section className=\"profile\">\n      <figure className=\"profile__figure\" onClick={onImage}>\n        <img\n          src={avatar}\n          alt=\"Аватар - графическое представление пользователя\"\n          className=\"profile__image\"\n        />\n      </figure>\n      <div className=\"profile__control\">\n        <h1 className=\"profile__text profile__text_type_name\">{name}</h1>\n        <button\n          type=\"button\"\n          className=\"profile__button profile__button_type_edit\"\n          onClick={onEditButton}\n        />\n      </div>\n      <p className=\"profile__text profile__text_type_about\">{about}</p>\n      <button\n        type=\"button\"\n        className=\"profile__button profile__button_type_add\"\n        onClick={onAddButton}\n      />\n    </section>\n  );\n}\n\nexport default Profile;\n","import React from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Card({ item, onImage, onLikeButton, onRemoveButton }) {\n  const { _id: currentUserId } = React.useContext(CurrentUserContext);\n  const { link, likes, name, owner, _id: cardId } = item;\n  // Determine the state of the buttons:\n  const isOwner = currentUserId === owner._id;\n  const hasLike = likes.some((user) => user._id === currentUserId);\n  const likeButtonClasses = [\n    'card__button-like',\n    'card__button-like_active'\n  ];\n\n  // Handlers:\n  const handleImageClick = () => {\n    onImage(item);\n  };\n  const handleLikeButtonClick = () => {\n    onLikeButton(item, currentUserId);\n  };\n\n  return (\n    <li className=\"gallery__item card\">\n      <img\n        src={link}\n        alt={`Изображение: ${name}`}\n        className=\"card__image\"\n        onClick={handleImageClick}\n      />\n      <h2 className=\"card__heading\">{name}</h2>\n      <button\n        type=\"button\"\n        className={hasLike\n          ? likeButtonClasses.join(' ')\n          : likeButtonClasses[0]\n        }\n        onClick={handleLikeButtonClick}\n      />\n      <span className=\"card__counter\">{likes.length}</span>\n      {\n        isOwner && (\n          <button\n            type=\"button\"\n            className=\"card__button-remove\"\n            onClick={() => {\n              onRemoveButton(cardId);\n            }}\n          />\n        )\n      }\n    </li>\n  );\n}\n\nexport default Card;\n","import React from 'react';\n\nfunction Gallery({ component: Component, items, itemProps }) {\n  return (\n    <section className=\"gallery\">\n      <ul className=\"gallery__items\">\n        {\n          items.map((item, index) => (\n            <Component\n              key={index}\n              item={item}\n              {...itemProps}\n            />\n          ))\n        }\n      </ul>\n    </section>\n  );\n}\n\nexport default Gallery;\n","import React from 'react';\n\n/**\n * Component representing the footer of a page.\n * @returns {JSX.Element}\n * @constructor\n */\nfunction Footer() {\n  return (\n    <footer className=\"page__section footer\">\n      <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport PopupWithItem from './PopupWithItem';\n\nfunction PopupWithForm(props) {\n  const {\n    isOpen,\n    onClose,\n    onSubmit,\n    isValid = true,\n    legend,\n    children,\n    popupItemSizeClassName\n  } = props;\n\n  const submitButtonClasses = [\n    'form__button',\n    'form__button_theme_light',\n    'form__button_disabled'\n  ];\n  const submitButtonProps = {\n    true: {\n      className: submitButtonClasses.slice(0, 2).join(' ')\n    },\n    false: {\n      className: submitButtonClasses.join(' '),\n      disabled: true\n    }\n  }[isValid];\n  const popupChildren = (\n    <form\n      action=\"#\"\n      className=\"form form_theme_light\"\n      onSubmit={onSubmit}\n      noValidate\n    >\n      <fieldset className=\"form__fieldset\">\n        <legend className=\"form__legend\">{legend}</legend>\n        {children}\n      </fieldset>\n      <button type=\"submit\" {...submitButtonProps}>Сохранить</button>\n    </form>\n  );\n  const popupAdditionalClasses = [\n    'popup_background-transparency_semi',\n    'popup_opened'\n  ];\n\n  return (\n    <PopupWithItem\n      popupAdditionalClassName={\n        isOpen\n          ? popupAdditionalClasses.join(' ')\n          : popupAdditionalClasses[0]\n      }\n      popupItemSizeClassName={popupItemSizeClassName}\n      onClose={onClose}\n      children={popupChildren}\n    />\n  );\n}\n\nexport default PopupWithForm;\n","import React from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport PopupWithForm from './PopupWithForm';\n\nfunction PopupUserInfo({ isOpen, onClose, onUpdate }) {\n  const currentUser = React.useContext(CurrentUserContext);\n  const [name, setName] = React.useState('');\n  const [about, setAbout] = React.useState('');\n  const [isValidName, setIsValidName] = React.useState(false);\n  const [isValidAbout, setIsValidAbout] = React.useState(false);\n  const [nameError, setNameError] = React.useState('');\n  const [aboutError, setAboutError] = React.useState('');\n\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setAbout(currentUser.about);\n    setIsValidName(true);\n    setNameError('');\n    setIsValidAbout(true);\n    setAboutError('');\n  }, [currentUser, isOpen]);\n\n  // Handlers:\n  const handleNameChange = (event) => {\n    const { value, validity, validationMessage } = event.target;\n    setName(value);\n    setIsValidName(validity.valid);\n    setNameError(validationMessage);\n  };\n  const handleAboutInput = (event) => {\n    const { value, validity, validationMessage } = event.target;\n    setAbout(value);\n    setIsValidAbout(validity.valid);\n    setAboutError(validationMessage);\n  };\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    onUpdate({ name, about });\n    onClose();\n  };\n\n  const inputClasses = [\n    'form__input',\n    'form__input_theme_light',\n    'form__input_invalid'\n  ];\n  const inputGeneralProps = {\n    type: 'text',\n    minLength: 2,\n    required: true\n  };\n  const formChildren = (\n    <>\n      <label htmlFor=\"inputUserName\" className=\"form__label\">\n        <input\n          id=\"inputUserName\"\n          className={\n            isValidName\n              ? inputClasses.slice(0, 2).join(' ')\n              : inputClasses.join(' ')\n          }\n          maxLength=\"40\"\n          pattern=\"[a-zA-Zа-яА-ЯёЁ -]+\"\n          placeholder=\"Имя пользователя\"\n          value={name}\n          onChange={handleNameChange}\n          {...inputGeneralProps}\n        />\n        <span className=\"form__error\">{nameError}</span>\n      </label>\n      <label htmlFor=\"inputUserAbout\" className=\"form__label\">\n        <input\n          id=\"inputUserAbout\"\n          className={\n            isValidAbout\n              ? inputClasses.slice(0, 2).join(' ')\n              : inputClasses.join(' ')\n          }\n          maxLength=\"200\"\n          placeholder=\"Информация о пользователе\"\n          value={about}\n          onChange={handleAboutInput}\n          {...inputGeneralProps}\n        />\n        <span className=\"form__error\">{aboutError}</span>\n      </label>\n    </>\n  );\n\n  return (\n    <PopupWithForm\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n      isValid={isValidName && isValidAbout}\n      legend=\"Редактировать профиль\"\n      children={formChildren}\n      popupItemSizeClassName=\"popup__item_size-for_large-form\"\n    />\n  );\n}\n\nexport default PopupUserInfo;\n","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction PopupCardInfo({ isOpen, onClose, onAdd }) {\n  const nameInputRef = React.useRef();\n  const aboutInputRef = React.useRef();\n\n  React.useEffect(() => {\n    nameInputRef.current.value = '';\n    aboutInputRef.current.value = '';\n  }, [isOpen]);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    onAdd({\n      name: nameInputRef.current.value,\n      link: aboutInputRef.current.value\n    });\n    onClose();\n  };\n\n  const inputGeneralProps = {\n    className: 'form__input form__input_theme_light',\n    required: true\n  };\n  const formChildren = (\n    <>\n      <label htmlFor=\"inputCardName\" className=\"form__label\">\n        <input\n          type=\"text\"\n          id=\"inputCardName\"\n          minLength=\"1\"\n          maxLength=\"30\"\n          pattern=\"[a-zA-Zа-яА-ЯёЁ -]+\"\n          placeholder=\"Название места\"\n          ref={nameInputRef}\n          {...inputGeneralProps}\n        />\n        <span className=\"form__error\"></span>\n      </label>\n      <label htmlFor=\"inputCardAbout\" className=\"form__label\">\n        <input\n          type=\"url\"\n          id=\"inputCardAbout\"\n          placeholder=\"Ссылка на изображение\"\n          ref={aboutInputRef}\n          {...inputGeneralProps}\n        />\n        <span className=\"form__error\"></span>\n      </label>\n    </>\n  );\n\n  return (\n    <PopupWithForm\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n      legend=\"Новое место\"\n      children={formChildren}\n      popupItemSizeClassName=\"popup__item_size-for_large-form\"\n    />\n  );\n}\n\nexport default PopupCardInfo;\n","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction PopupUserpic({ isOpen, onClose, onUpdate }) {\n  const inputRef = React.useRef();\n\n  React.useEffect(() => {\n    inputRef.current.value = '';\n  }, [isOpen]);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    onUpdate(inputRef.current.value);\n    onClose();\n  };\n\n  const formChildren = (\n    <label htmlFor=\"inputUserpicLink\" className=\"form__label\">\n      <input\n        type=\"url\"\n        id=\"inputUserpicLink\"\n        className=\"form__input form__input_theme_light\"\n        placeholder=\"Ссылка на изображение\"\n        ref={inputRef}\n        required\n      />\n    </label>\n  );\n\n  return (\n    <PopupWithForm\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n      legend=\"Обновить аватар\"\n      children={formChildren}\n      popupItemSizeClassName=\"popup__item_size-for_small-form\"\n    />\n  );\n}\n\nexport default PopupUserpic;\n","import React from 'react';\nimport PopupWithItem from './PopupWithItem';\n\nfunction PopupPicture({ item, onClose }) {\n  const isOpen = !!item;\n  const { link, name } = isOpen ? { ...item } : { link: '#', name: '#' };\n\n  const popupChildren = (\n    <figure className=\"figure\">\n      <img\n        src={link}\n        alt={`Изображение: ${name}`}\n        className=\"figure__image\"\n      />\n      <figcaption className=\"figure__caption\">{name}</figcaption>\n    </figure>\n  );\n  const popupAdditionalClasses = [\n    'popup_background-transparency_slightly',\n    'popup_opened'\n  ];\n\n  return (\n    <PopupWithItem\n      popupAdditionalClassName={\n        isOpen\n          ? popupAdditionalClasses.join(' ')\n          : popupAdditionalClasses[0]\n      }\n      popupItemSizeClassName=\"popup__item_size-for_figure\"\n      onClose={onClose}\n      children={popupChildren}\n    />\n  );\n}\n\nexport default PopupPicture;\n","import React from 'react';\nimport Header from './Header';\nimport Content from './Content';\nimport Profile from './Profile';\nimport Card from './Card';\nimport Gallery from './Gallery';\nimport Footer from './Footer';\nimport PopupUserInfo from './PopupUserInfo';\nimport PopupCardInfo from './PopupCardInfo';\nimport PopupUserpic from './PopupUserpic';\nimport PopupPicture from './PopupPicture';\n\nfunction HomePage(props) {\n  const {\n    headerProps,\n    profileProps,\n    galleryProps,\n    popupUserInfoProps,\n    popupCardInfoProps,\n    popupUserpicProps,\n    popupPictureProps,\n  } = props;\n\n  const contentChildren = (\n    <>\n      <Profile {...profileProps} />\n      <Gallery\n        component={Card}\n        {...galleryProps}\n      />\n    </>\n  );\n\n  return (\n    <>\n      <Header {...headerProps} />\n      <Content children={contentChildren} />\n      <Footer />\n      <PopupUserInfo {...popupUserInfoProps} />\n      <PopupCardInfo {...popupCardInfoProps} />\n      <PopupUserpic {...popupUserpicProps} />\n      <PopupPicture {...popupPictureProps} />\n    </>\n  );\n}\n\nexport default HomePage;\n","import React from 'react';\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport { RegisteredUserContext } from '../contexts/RegisteredUserContext';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport authApi from '../utils/authApi';\nimport baseApi from '../utils/baseApi';\nimport ProtectedRoute from './ProtectedRoute';\nimport AuthPage from './AuthPage';\nimport HomePage from './HomePage';\n\n/**\n * Component representing the app.\n * @returns {JSX.Element}\n * @constructor\n */\nfunction App() {\n  const history = useHistory();\n  // [State variables]\n  // Variables for the authApi:\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const [registeredUser, setRegisteredUser] = React.useState({\n    email: '',\n    password: ''\n  });\n  const [userLogin, setUserLogin] = React.useState(null);\n  const [isOpenTooltipFailure, setIsOpenTooltipFailure] = React.useState(false);\n  const [isOpenTooltipSuccess, setIsOpenTooltipSuccess] = React.useState(false);\n  // Variables for the baseApi:\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  const [selectedCard, setSelectedCard] = React.useState(null);\n  const [isOpenPopupUserpic, setIsOpenPopupUserpic] = React.useState(false);\n  const [isOpenPopupUserInfo, setIsOpenPopupUserInfo] = React.useState(false);\n  const [isOpenPopupCardInfo, setIsOpenPopupCardInfo] = React.useState(false);\n\n  // [Handlers]\n  // General handlers:\n  const closeAllPopups = () => {\n    setIsOpenTooltipFailure(false);\n    setIsOpenTooltipSuccess(false);\n    setIsOpenPopupUserpic(false);\n    setIsOpenPopupUserInfo(false);\n    setIsOpenPopupCardInfo(false);\n    setSelectedCard(null);\n  };\n  const handleBaseApiError = (apiName, statusInfo) => {\n    console.error(`BaseApi.${apiName} response status: ${statusInfo}`);\n  };\n  // AuthPage component handlers:\n  const handleAuthError = (errorMessage, errorCode) => {\n    setIsOpenTooltipFailure(true);\n    console.error(errorMessage[errorCode] || 'Неизвестная ошибка');\n  };\n  const authorizeUser = (userInfo) => {\n    authApi\n      .authorizeUser(userInfo, ({ token }) => {\n        localStorage.setItem('jwt', token);\n        setIsOpenTooltipSuccess(true);\n      })\n      .catch((response) => {\n        const errorMessage = {\n          400: 'Не передано одно из полей',\n          401: 'Некорректно заполнено одно из полей'\n        };\n        handleAuthError(errorMessage, response.status);\n      });\n  };\n  const registerUser = (newUserInfo) => {\n    authApi\n      .registerUser(newUserInfo, () => {\n        setRegisteredUser(newUserInfo);\n        setIsOpenTooltipSuccess(true);\n      })\n      .catch((response) => {\n        const errorMessage = {\n          400: 'Некорректно заполнено одно из полей'\n        };\n        handleAuthError(errorMessage, response.status);\n      });\n  };\n  // HomePage component handlers:\n  const toggleLikeCard = ({ likes, _id: cardId }, userId) => {\n    const hasLike = likes.some((user) => user._id === userId);\n    const httpMethod = hasLike ? 'DELETE' : 'PUT';\n    baseApi\n      .toggleLikeCard(cardId, httpMethod, (updatedCard) => {\n        const mappedCards = cards.map((card) => (\n          card._id === updatedCard._id ? updatedCard : card\n        ));\n        setCards(mappedCards);\n      })\n      .catch((statusInfo) => {\n        handleBaseApiError('toggleLikeCard', statusInfo);\n      });\n  };\n  const removeCard = (cardId) => {\n    baseApi\n      .removeCard(cardId, () => {\n        setCards(cards.filter(({ _id }) => _id !== cardId));\n      })\n      .catch((statusInfo) => {\n        handleBaseApiError('removeCard', statusInfo);\n      });\n  };\n  const updateUserInfo = (userInfo) => {\n    baseApi\n      .setUserInfo(userInfo, setCurrentUser)\n      .catch((statusInfo) => {\n        handleBaseApiError('setUserInfo', statusInfo);\n      });\n  };\n  const addCard = (cardInfo) => {\n    baseApi\n      .addCard(cardInfo, (newCard) => {\n        setCards(cards.concat(newCard));\n      })\n      .catch((statusInfo) => {\n        handleBaseApiError('addCard', statusInfo);\n      });\n  };\n  const updateUserpic = (userpicLink) => {\n    baseApi\n      .setUserpic(userpicLink, setCurrentUser)\n      .catch((statusInfo) => {\n        handleBaseApiError('setUserpic', statusInfo);\n      });\n  };\n\n  // [Properties]\n  // AuthPage props:\n  const tooltipTypeFailureProps = {\n    isOpen: isOpenTooltipFailure,\n    onClose: closeAllPopups\n  };\n  const authPageTypeLoginProps = {\n    pageType: 'login',\n    onRedirectButton() {\n      history.push('/sign-up');\n    },\n    onSubmit: authorizeUser,\n    tooltipTypeFailureProps,\n    tooltipTypeSuccessProps: {\n      isOpen: isOpenTooltipSuccess,\n      onClose() {\n        closeAllPopups();\n        setLoggedIn(true);\n      }\n    }\n  };\n  const authPageTypeRegisterProps = {\n    pageType: 'register',\n    onRedirectButton() {\n      history.push('/sign-in');\n    },\n    onSubmit: registerUser,\n    tooltipTypeFailureProps,\n    tooltipTypeSuccessProps: {\n      isOpen: isOpenTooltipSuccess,\n      onClose() {\n        closeAllPopups();\n        history.push('/sign-in');\n      }\n    }\n  };\n  // HomePage props:\n  const homePageProps = {\n    headerProps: {\n      pageType: 'home',\n      onRedirectButton() {\n        setLoggedIn(false);\n        setUserLogin(null);\n        localStorage.removeItem('jwt');\n        history.push('/sign-in');\n      },\n      userLogin\n    },\n    profileProps: {\n      onImage() {\n        setIsOpenPopupUserpic(true);\n      },\n      onEditButton() {\n        setIsOpenPopupUserInfo(true);\n      },\n      onAddButton() {\n        setIsOpenPopupCardInfo(true);\n      }\n    },\n    galleryProps: {\n      items: cards,\n      itemProps: {\n        onImage(cardInfo) {\n          setSelectedCard(cardInfo);\n        },\n        onLikeButton: toggleLikeCard,\n        onRemoveButton: removeCard\n      }\n    },\n    popupUserInfoProps: {\n      isOpen: isOpenPopupUserInfo,\n      onClose: closeAllPopups,\n      onUpdate: updateUserInfo\n    },\n    popupCardInfoProps: {\n      isOpen: isOpenPopupCardInfo,\n      onClose: closeAllPopups,\n      onAdd: addCard\n    },\n    popupUserpicProps: {\n      isOpen: isOpenPopupUserpic,\n      onClose: closeAllPopups,\n      onUpdate: updateUserpic\n    },\n    popupPictureProps: {\n      item: selectedCard,\n      onClose: closeAllPopups\n    },\n  };\n\n  React.useEffect(() => {\n    authApi\n      .checkToken(({ data }) => {\n        baseApi\n          .getUserInfo(setCurrentUser)\n          .catch((statusInfo) => {\n            handleBaseApiError('getUserInfo', statusInfo);\n          });\n        baseApi\n          .getCardList(setCards)\n          .catch((statusInfo) => {\n            handleBaseApiError('getCardList', statusInfo);\n          });\n        setUserLogin(data.email);\n        setLoggedIn(true);\n        history.push('/');\n      })\n      .catch((response) => {\n        response.json()\n          .then((except) => {\n            console.error(except.message);\n          })\n          .catch(() => {\n            console.error('Неизвестная ошибка');\n          });\n      });\n  }, [loggedIn, history]);\n\n  return (\n    <RegisteredUserContext.Provider value={registeredUser}>\n      <CurrentUserContext.Provider value={currentUser}>\n        <Switch>\n          <Route exact path=\"/sign-in\">\n            <AuthPage {...authPageTypeLoginProps} />\n          </Route>\n          <Route exact path=\"/sign-up\">\n            <AuthPage {...authPageTypeRegisterProps} />\n          </Route>\n          <ProtectedRoute\n            exact\n            path=\"/\"\n            loggedIn={loggedIn}\n            component={HomePage}\n            {...homePageProps}\n          />\n          <ProtectedRoute path=\"*\" loggedIn={false} />\n        </Switch>\n      </CurrentUserContext.Provider>\n    </RegisteredUserContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}